name: Release

on:
  push:
    tags:
      - '*'

env:
  CLI_SCALA_VERSION: "3.0.0-RC1"
  CLI_SCALA_BINARY_VERSION: "3.0.0-RC1"
  GRAALVM_VERSION: "21.0.0.2"
  GRAALVM_JAVA_VERSION: "java11"
  GRAALVM_ARCH: "amd64"

jobs:
  github-release:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-

      - name: sbt GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}
        run: |
          echo "Run] sbt GitHub release"
          echo 'sbt -J-Xmx2048m devOopsGitHubRelease'
          sbt \
            -J-Xmx2048m \
            devOopsGitHubRelease

  github-release-artifacts-and-publish:
    needs: github-release

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { name: "Scala 2", version: "2.12.12",   binary-version: "2.12",      java-version: "11", cli: "" }
          - { name: "Scala 2", version: "2.13.3",    binary-version: "2.13",      java-version: "11", cli: "" }
          - { name: "Scala 3", version: "3.0.0-RC1", binary-version: "3.0.0-RC1", java-version: "11", cli: "cli" }

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.scala.java-version }}

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-

      - name: "sbt GitHub Release and Publish tag for ${{ matrix.scala.name }} ${{ matrix.scala.version }} - ${{ github.run_number }}"
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
        run: |
          export GITHUB_TAG=${GITHUB_REF#refs/tags/}
          .github/workflows/sbt-release.sh ${{ matrix.scala.version }} ${{ matrix.scala.cli }}

  github-release-graalvm-native-image:
    needs: github-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        gu-binary: [gu]
        run-binary: [maven2sbt-cli]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: ubuntu-latest
            run-binary: maven2sbt-cli.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: macos-latest
            run-binary: maven2sbt-cli.cmd
          - os: windows-latest
            gu-binary: gu
          - os: windows-latest
            run-binary: maven2sbt-cli
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: ${{ env.GRAALVM_VERSION }}
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: ${{ env.GRAALVM_JAVA_VERSION }}
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: ${{ env.GRAALVM_ARCH }}

      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image

      - uses: actions/checkout@v2
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-

      - name: "GraalVM Build for Scala ${{ env.CLI_SCALA_VERSION }} - ${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          ./sbt \
            -J-Xmx2048m \
            ++${{ env.CLI_SCALA_VERSION }}! \
            clean \
            test \
            graalvm-native-image:packageBin

          rm -f */target/scala-*/maven2sbt*.jar

          ls -lGh cli/target/graalvm-native-image/
          sh -c "cli/target/graalvm-native-image/${{ matrix.run-binary }} --help"

          mv cli/target/graalvm-native-image/maven2sbt-cli cli/target/graalvm-native-image/maven2sbt-cli-${{ matrix.os }}

          ./sbt \
            -J-Xmx2048m \
            devOopsGitHubReleaseUploadArtifacts

  publish_maven:
    needs: github-release-artifacts-and-publish

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Sync core to Maven Central
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
        run: |
          PROJECT_VERSION="${GITHUB_REF#refs/tags/v}"
          BINTRAY_SUBJECT=kevinlee
          BINTRAY_REPO=maven
          BINTRAY_PACKAGE=maven2sbt-core
          echo "BINTRAY_SUBJECT: $BINTRAY_SUBJECT"
          echo "   BINTRAY_REPO: $BINTRAY_REPO"
          echo "BINTRAY_PACKAGE: $BINTRAY_PACKAGE"
          echo "PROJECT_VERSION: $PROJECT_VERSION"
          echo "Sync to Maven Central..."
          curl --user $BINTRAY_USER:$BINTRAY_PASS -X POST "https://api.bintray.com/maven_central_sync/$BINTRAY_SUBJECT/$BINTRAY_REPO/$BINTRAY_PACKAGE/versions/$PROJECT_VERSION"
