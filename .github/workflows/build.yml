name: Build All

on:
  push:
    branches:
      - "**"

#  pull_request:
#    branches:
#      - main

env:
  CLI_SCALA_VERSION: "3.0.0-RC1"
  CLI_SCALA_BINARY_VERSION: "3.0.0-RC1"
  GRAALVM_VERSION: "21.0.0.2"
  GRAALVM_JAVA_VERSION: "java11"
  GRAALVM_ARCH: "amd64"
  GRAALVM_BIN_DIR_NAME: "native-image"

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { name: "Scala 2", version: "2.12.12",   binary-version: "2.12",      java-version: "adopt@1.11", report: "" }
          - { name: "Scala 2", version: "2.13.3",    binary-version: "2.13",      java-version: "adopt@1.11", report: "report" }
          - { name: "Scala 3", version: "3.0.0-RC1", binary-version: "3.0.0-RC1", java-version: "adopt@1.11", report: "" }

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.scala.java-version }}

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-


      - name: "[Push] Build All for ${{ matrix.scala.name }} ${{ matrix.scala.version }} - ${{ github.run_number }}"
        if: github.event_name == 'push'
        env:
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo "[BEFORE]CURRENT_BRANCH_NAME=${CURRENT_BRANCH_NAME}"
          export CURRENT_BRANCH_NAME="${CURRENT_BRANCH_NAME#refs/heads/}"
          echo " [AFTER]CURRENT_BRANCH_NAME=${CURRENT_BRANCH_NAME}"
          echo "RUN_ID=${RUN_ID}"
          echo "RUN_NUMBER=${RUN_NUMBER}"
          echo "Push #${PUSH_NUMBER}"
          java -version
          .github/workflows/sbt-build-all.sh ${{ matrix.scala.version }}

      - name: "[PR] Build All for ${{ matrix.scala.name }} ${{ matrix.scala.version }} - PR-#${{ github.event.pull_request.number }} - ${{ github.run_number }}"
        if: github.event_name == 'pull_request'
        env:
          CURRENT_BRANCH_NAME: ${{ github.base_ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          echo "Rull request to the '${CURRENT_BRANCH_NAME}' branch"
          echo "RUN_ID=${RUN_ID}"
          echo "RUN_NUMBER=${RUN_NUMBER}"
          echo "PR #${PR_NUMBER}"
          java -version
          .github/workflows/sbt-build-all.sh ${{ matrix.scala.version }} ${{ matrix.scala.report }}

  graalvm_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        run-binary: [maven2sbt-cli, maven2sbt-cli.exe]
        exclude:
          - os: ubuntu-latest
            run-binary: maven2sbt-cli.exe
          - os: macos-latest
            run-binary: maven2sbt-cli.exe
          - os: windows-latest
            run-binary: maven2sbt-cli
    steps:

      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "graalvm-ce-java11@"
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-

      - name: "GraalVM Build for Scala ${{ env.CLI_SCALA_VERSION }} - ${{ github.run_number }}"
        env:
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          sbt \
            -J-Xmx2048m \
            ++${{ env.CLI_SCALA_VERSION }}! \
            clean \
            test \
            nativeImage

          rm -f */target/scala-*/maven2sbt*.jar

          ls -lGh cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/

          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} --version"
          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} --help"
          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} print --help"
          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} file --help"

  graalvm_build_windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        run-binary: [maven2sbt-cli]
    steps:
      - name: Configure git
        run: "git config --global core.autocrlf false"
        shell: bash
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "graalvm-ce-java11@"
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ env.CLI_SCALA_BINARY_VERSION }}-

      - name: "GraalVM Build for Scala ${{ env.CLI_SCALA_VERSION }} - ${{ github.run_number }}"
        shell: bash
        env:
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          sbt \
            -J-Xmx2048m \
            ++${{ env.CLI_SCALA_VERSION }}! \
            clean \
            test \
            nativeImage

          rm -f */target/scala-*/*.jar

          ls -lGh cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/

          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} --version"
          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} --help"
          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} print --help"
          sh -c "cli/target/${{ env.GRAALVM_BIN_DIR_NAME }}/${{ matrix.run-binary }} file --help"
